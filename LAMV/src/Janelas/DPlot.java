/*
 * DOper.java
 *
 * Created on 16 de Fevereiro de 2005, 19:02
 */

package Janelas;

import Sistema.*;
import Dados.*;
import Componentes.ModeloTabelaLista;

/**
 *
 * @author  Gustavo
 */
public class DPlot extends javax.swing.JDialog {
    
    /** Creates new form DOper */
    public DPlot(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        this.setResizable(false);
        initComponents();
        this.setSize( 530, 370 );
        this.setTitle("Novo gráfico");
        this.initVals();
        
        this.PCorGraf.setCursor(java.awt.Cursor.getPredefinedCursor(java.awt.Cursor.HAND_CURSOR));
        //this.PCorGrid.setCursor(java.awt.Cursor.getPredefinedCursor(java.awt.Cursor.HAND_CURSOR));
        modelo = new ModeloTabelaLista();
        TGraf.setModel( modelo );
    }

    private void initVals() {
        int tam = LAMV.LAMV.LDados.getnNos();
        if( tam == 0 ) {
            return;
        }
        CBDadoX.removeAllItems();
        CBDadoY.removeAllItems();
        String nome;
        Dado d;
        for( int c = 0; c < tam; c++ ) {
            d = LAMV.LAMV.LDados.getD(c);
            if( d== null )
                return;
            nome = d.getName();
            CBDadoX.addItem( nome );
            CBDadoY.addItem( nome );
        }
        this.atualizaNumerosX();
        this.atualizaNumerosY();
        this.atualizaNomesGraficos();
    }

    private void atualizaNomesGraficos() {
        int tam;
        CBGrafico.removeAllItems();
        tam = LAMV.LAMV.LGraficos.getnNos();
        IFGrafico g;
        String nome;
        CBGrafico.addItem( "<<Novo>>" );
        for( int c = 0; c < tam; c++ ) {
            g = LAMV.LAMV.LGraficos.getD(c);
            if( g == null )
                return;
            nome = g.getName();
            CBGrafico.addItem( nome );
        }
    }

    private void atualizaNumerosX() {
        Dado d;
        int tam;

        CBNX.removeAllItems();

        d = LAMV.LAMV.LDados.Procura( (String)CBDadoX.getSelectedItem() );

        if( d == null )
            return;
        if( RBLinhasX.isSelected() ) {
            tam = d.getDimL();
            LnX.setText(""+d.getDimC());
        } else {
            tam = d.getDimC();
            LnX.setText(""+d.getDimL());
        }
        for( int c = 0; c < tam; c++ ) {
            CBNX.addItem(""+c);
        }
    }

    private void atualizaNumerosY() {
        Dado d;
        int tam;

        CBNY.removeAllItems();

        d = LAMV.LAMV.LDados.Procura( (String)CBDadoY.getSelectedItem() );
        if( d == null )
            return;
        if( RBLinhasY.isSelected() ) {
            tam = d.getDimL();
            LnY.setText(""+d.getDimC());
        } else {
            tam = d.getDimC();
            LnY.setText(""+d.getDimL());
        }
        for( int c = 0; c < tam; c++ ) {
            CBNY.addItem(""+c);
        }
    }

    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        GX = new javax.swing.ButtonGroup();
        GY = new javax.swing.ButtonGroup();
        GP = new javax.swing.ButtonGroup();
        PX = new javax.swing.JPanel();
        CBDadoX = new javax.swing.JComboBox();
        CBNX = new javax.swing.JComboBox();
        RBLinhasX = new javax.swing.JRadioButton();
        RBColunasX = new javax.swing.JRadioButton();
        LN1 = new javax.swing.JLabel();
        LnX = new javax.swing.JLabel();
        PY = new javax.swing.JPanel();
        RBLinhasY = new javax.swing.JRadioButton();
        RBColunasY = new javax.swing.JRadioButton();
        LN2 = new javax.swing.JLabel();
        CBNY = new javax.swing.JComboBox();
        CBDadoY = new javax.swing.JComboBox();
        CBAtivo = new javax.swing.JCheckBox();
        LnY = new javax.swing.JLabel();
        POutros = new javax.swing.JPanel();
        LCorG = new javax.swing.JLabel();
        CBLinhas = new javax.swing.JCheckBox();
        CBPontos = new javax.swing.JCheckBox();
        PCorGraf = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        TFNomeComponente = new javax.swing.JTextField();
        TB2 = new javax.swing.JToggleButton();
        TB4 = new javax.swing.JToggleButton();
        jLabel3 = new javax.swing.JLabel();
        PGraf = new javax.swing.JPanel();
        BPlot = new javax.swing.JButton();
        LGrafico = new javax.swing.JLabel();
        CBGrafico = new javax.swing.JComboBox();
        TFGrafico = new javax.swing.JTextField();
        PListaGraficos = new javax.swing.JPanel();
        SPGraf = new javax.swing.JScrollPane();
        TGraf = new javax.swing.JTable();
        BSair = new javax.swing.JButton();
        BExcluir = new javax.swing.JButton();
        BExibir = new javax.swing.JButton();

        getContentPane().setLayout(null);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Op\u00e7\u00f5es de Plotagem");
        PX.setLayout(null);

        PX.setBorder(javax.swing.BorderFactory.createTitledBorder("Eixo x"));
        CBDadoX.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CBDadoXActionPerformed(evt);
            }
        });

        PX.add(CBDadoX);
        CBDadoX.setBounds(10, 50, 160, 20);

        CBNX.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CBNXActionPerformed(evt);
            }
        });

        PX.add(CBNX);
        CBNX.setBounds(210, 50, 50, 20);

        GX.add(RBLinhasX);
        RBLinhasX.setText("Linha");
        RBLinhasX.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RBLinhasXActionPerformed(evt);
            }
        });

        PX.add(RBLinhasX);
        RBLinhasX.setBounds(10, 20, 70, 23);

        GX.add(RBColunasX);
        RBColunasX.setSelected(true);
        RBColunasX.setText("Coluna");
        RBColunasX.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RBColunasXActionPerformed(evt);
            }
        });

        PX.add(RBColunasX);
        RBColunasX.setBounds(80, 20, 70, 23);

        LN1.setFont(new java.awt.Font("Microsoft Sans Serif", 1, 12));
        LN1.setText("N\u00ba :");
        PX.add(LN1);
        LN1.setBounds(180, 50, 30, 20);

        LnX.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        LnX.setText("0");
        PX.add(LnX);
        LnX.setBounds(210, 30, 50, 14);

        getContentPane().add(PX);
        PX.setBounds(10, 10, 270, 90);

        PY.setLayout(null);

        PY.setBorder(javax.swing.BorderFactory.createTitledBorder("Eixo y"));
        GY.add(RBLinhasY);
        RBLinhasY.setText("Linha");
        RBLinhasY.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RBLinhasYActionPerformed(evt);
            }
        });

        PY.add(RBLinhasY);
        RBLinhasY.setBounds(10, 20, 70, 23);

        GY.add(RBColunasY);
        RBColunasY.setSelected(true);
        RBColunasY.setText("Coluna");
        RBColunasY.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RBColunasYActionPerformed(evt);
            }
        });

        PY.add(RBColunasY);
        RBColunasY.setBounds(80, 20, 70, 23);

        LN2.setFont(new java.awt.Font("Microsoft Sans Serif", 1, 12));
        LN2.setText("N\u00ba :");
        PY.add(LN2);
        LN2.setBounds(180, 50, 30, 20);

        PY.add(CBNY);
        CBNY.setBounds(210, 50, 50, 20);

        CBDadoY.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CBDadoYActionPerformed(evt);
            }
        });

        PY.add(CBDadoY);
        CBDadoY.setBounds(10, 50, 160, 20);

        CBAtivo.setSelected(true);
        CBAtivo.setText("Ativo");
        CBAtivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CBAtivoActionPerformed(evt);
            }
        });

        PY.add(CBAtivo);
        CBAtivo.setBounds(150, 20, 60, 20);

        LnY.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        LnY.setText("0");
        PY.add(LnY);
        LnY.setBounds(210, 30, 50, 14);

        getContentPane().add(PY);
        PY.setBounds(10, 100, 270, 90);

        POutros.setLayout(null);

        POutros.setBorder(javax.swing.BorderFactory.createTitledBorder("Outras op\u00e7\u00f5es"));
        LCorG.setText("Cor:");
        POutros.add(LCorG);
        LCorG.setBounds(10, 40, 30, 20);

        CBLinhas.setSelected(true);
        CBLinhas.setText("Linhas");
        POutros.add(CBLinhas);
        CBLinhas.setBounds(100, 20, 70, 23);

        CBPontos.setSelected(true);
        CBPontos.setText("Pontos");
        CBPontos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CBPontosActionPerformed(evt);
            }
        });

        POutros.add(CBPontos);
        CBPontos.setBounds(100, 50, 70, 23);

        PCorGraf.setBackground(FSys.COR_GRAFICO_PADRAO);
        PCorGraf.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        PCorGraf.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                PCorGrafMouseClicked(evt);
            }
        });

        POutros.add(PCorGraf);
        PCorGraf.setBounds(40, 40, 20, 20);

        jLabel1.setText("Nome do componente:");
        POutros.add(jLabel1);
        jLabel1.setBounds(10, 80, 140, 14);

        TFNomeComponente.setText("componente");
        POutros.add(TFNomeComponente);
        TFNomeComponente.setBounds(10, 95, 170, 19);

        GP.add(TB2);
        TB2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagem/Pontos/quadrado.gif")));
        TB2.setSelected(true);
        TB2.setToolTipText("Pontos");
        TB2.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagem/Pontos/quadrado_focus.gif")));
        TB2.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagem/Pontos/quadrado_focus.gif")));
        POutros.add(TB2);
        TB2.setBounds(180, 50, 20, 20);

        GP.add(TB4);
        TB4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagem/Pontos/cir.gif")));
        TB4.setToolTipText("Triangulo");
        TB4.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagem/Pontos/cir_focus.gif")));
        TB4.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagem/Pontos/cir_focus.gif")));
        POutros.add(TB4);
        TB4.setBounds(210, 50, 20, 20);

        jLabel3.setText("Tipo:");
        POutros.add(jLabel3);
        jLabel3.setBounds(180, 30, 70, 14);

        getContentPane().add(POutros);
        POutros.setBounds(10, 190, 270, 125);

        PGraf.setLayout(null);

        PGraf.setBorder(javax.swing.BorderFactory.createTitledBorder("Gr\u00e1ficos"));
        BPlot.setText("Plotar");
        BPlot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BPlotActionPerformed(evt);
            }
        });

        PGraf.add(BPlot);
        BPlot.setBounds(60, 270, 70, 23);

        LGrafico.setText("Gr\u00e1fico :");
        PGraf.add(LGrafico);
        LGrafico.setBounds(10, 20, 50, 14);

        CBGrafico.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "<<Novo>>" }));
        CBGrafico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CBGraficoActionPerformed(evt);
            }
        });

        PGraf.add(CBGrafico);
        CBGrafico.setBounds(10, 40, 90, 22);

        TFGrafico.setText("novo_grafico");
        PGraf.add(TFGrafico);
        TFGrafico.setBounds(110, 40, 100, 20);

        PListaGraficos.setLayout(new java.awt.BorderLayout());

        PListaGraficos.setBorder(javax.swing.BorderFactory.createTitledBorder("Lista de Gr\u00e1ficos"));
        TGraf.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nome"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        TGraf.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TGrafMouseClicked(evt);
            }
        });

        SPGraf.setViewportView(TGraf);

        PListaGraficos.add(SPGraf, java.awt.BorderLayout.CENTER);

        PGraf.add(PListaGraficos);
        PListaGraficos.setBounds(10, 70, 200, 150);

        BSair.setText("Sair");
        BSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BSairActionPerformed(evt);
            }
        });

        PGraf.add(BSair);
        BSair.setBounds(140, 270, 70, 23);

        BExcluir.setText("Remover");
        BExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BExcluirActionPerformed(evt);
            }
        });

        PGraf.add(BExcluir);
        BExcluir.setBounds(10, 220, 90, 23);

        BExibir.setText("Mostrar");
        BExibir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BExibirActionPerformed(evt);
            }
        });

        PGraf.add(BExibir);
        BExibir.setBounds(120, 220, 90, 23);

        getContentPane().add(PGraf);
        PGraf.setBounds(290, 10, 220, 305);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void TGrafMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TGrafMouseClicked
// TODO add your handling code here:
        int row = TGraf.getSelectedRow();
        if( row <= 0 ){
            CBGrafico.setSelectedIndex(row+1);
        }
    }//GEN-LAST:event_TGrafMouseClicked

    private void BExibirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BExibirActionPerformed
// TODO add your handling code here:
        int row = TGraf.getSelectedRow();
        if( row >= 0 ) {
            IFGrafico G = LAMV.LAMV.LGraficos.getD(row);
            LAMV.LAMV.DPGraficos.add(G,0);
            G.show();
        }
    }//GEN-LAST:event_BExibirActionPerformed

    private void BExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BExcluirActionPerformed
// TODO add your handling code here:
        int row = TGraf.getSelectedRow();
        if( row >= 0 ) {
            LAMV.LAMV.LGraficos.Remove( (String)modelo.getValueAt(row,0) );
            modelo.removeRow(row);
            atualizaNomesGraficos();
        }
    }//GEN-LAST:event_BExcluirActionPerformed

    private void CBNXActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CBNXActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CBNXActionPerformed

    private void CBGraficoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CBGraficoActionPerformed
        // TODO add your handling code here:
/*        if( CBGrafico.getSelectedIndex() == 0 ) {
            TGraf.setEnabled(false);
            TFGrafico.setEnabled(true);
        } else {
            TGraf.setEnabled(true);
            TFGrafico.setEnabled(false);
        }*/
    }//GEN-LAST:event_CBGraficoActionPerformed

    private void PCorGrafMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PCorGrafMouseClicked
        // TODO add your handling code here:
        DColor c = new DColor( (java.awt.Frame)this.getParent() , true);
        FSys.centraliza(c);
        c.show();
        java.awt.Color cor = c.getCor();
        PCorGraf.setBackground(cor);
    }//GEN-LAST:event_PCorGrafMouseClicked

    private void CBDadoYActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CBDadoYActionPerformed
        // TODO add your handling code here:
        this.atualizaNumerosY();
    }//GEN-LAST:event_CBDadoYActionPerformed

    private void RBColunasYActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RBColunasYActionPerformed
        // TODO add your handling code here:
        this.atualizaNumerosY();
    }//GEN-LAST:event_RBColunasYActionPerformed

    private void RBLinhasYActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RBLinhasYActionPerformed
        // TODO add your handling code here:
        this.atualizaNumerosY();
    }//GEN-LAST:event_RBLinhasYActionPerformed

    private void CBDadoXActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CBDadoXActionPerformed
        // TODO add your handling code here:
        this.atualizaNumerosX();
    }//GEN-LAST:event_CBDadoXActionPerformed

    private void RBLinhasXActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RBLinhasXActionPerformed
        // TODO add your handling code here:
        this.atualizaNumerosX();
    }//GEN-LAST:event_RBLinhasXActionPerformed

    private void BPlotActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BPlotActionPerformed
        // TODO add your handling code here:
        Dado d;
        d = this.geraDado();
        if( d == null ) {
            Sistema.FSys.Msg("Erro","Impossível plotar esse dado.",0);
            return;
        }
        d.setCor( PCorGraf.getBackground() );
        d.setVerPontos( CBPontos.isSelected() );
        d.setVerRetas( CBLinhas.isSelected() );
        d.setTipoPonto( TB2.isSelected() ? Dado.RECTF : Dado.CIRCLEF );
        String nomeGraf;
        IFGrafico G;

        if( CBGrafico.getSelectedIndex() == 0 ) { /* Criar novo gráfico */
            nomeGraf = TFGrafico.getText();            
            if ( !Sistema.FSys.verificaNome( nomeGraf ) ) {
                Sistema.FSys.Msg("Erro","Nome inválido para o novo gráfico!",0);
                return;
            }
            if( LAMV.LAMV.LGraficos.Procura( nomeGraf ) != null ) { /* Já existe um gráfico com o mesmo nome */
                nomeGraf = Sistema.FSys.novoNomeGraf( nomeGraf );
            }
            G = new IFGrafico( nomeGraf );
            LAMV.LAMV.LGraficos.Insere( G );
            LAMV.LAMV.DPGraficos.add( G , 0 );
            LAMV.LAMV.DPGraficos.setSelectedFrame(G);
            LAMV.LAMV.TPCentro.setSelectedIndex(1);
            CBGrafico.addItem( G.getName() );
            modelo.addObjeto( G.getName() );
        } else {  /* adicionar dado a um gráfico ja existente */
            G = LAMV.LAMV.LGraficos.Procura( (String)CBGrafico.getSelectedItem() );
            if( G == null ) {
                Sistema.FSys.Msg("Erro","O gráfico selecionado não existe!",0);
                return;
            }
            LAMV.LAMV.LGraficos.Insere( G );
        }
        d.setName( TFNomeComponente.getText() );
        G.Plot(d);
        G.show();
    }//GEN-LAST:event_BPlotActionPerformed

    public void refresh(){
        initVals();
    }
    
    
    /*
     * A variaável 'eixo' referencia qual referência será retornada.
     * No caso de 'eixo == 0' o dado retornado é aquele referenciado pelo
     * JPanel que contém as opção do Eixo X.
     * Caso 'eixo != 0' retorna o dado referente ao JPanel que contém as
     * opções do Eixo Y.
     */
    private Dado getDado( int eixo ) {
        Dado d;
        javax.swing.JComboBox CB;

        if( eixo == 0 ) {
            d = LAMV.LAMV.LDados.Procura( (String)CBDadoX.getSelectedItem() );
            CB = CBNX;
        } else {
            d = LAMV.LAMV.LDados.Procura( (String)CBDadoY.getSelectedItem() );
            CB = CBNY;
        }

        if( d == null )
            return null;
        if( d.eConstante() ) {
            Constante temp = (Constante)d;
            return new Constante(temp.getValor());
        }
        if( d.eVetor() ) {
            Vetor temp = (Vetor)d;
            if( RBLinhasX.isSelected() ) {
                return new Constante( temp.getValor( CB.getSelectedIndex() ) );
            } else {
                Vetor v = new Vetor( ((Vetor)d) );
                return v;
            }
        }
        if( d.eMatriz() ) {
            Matriz temp = (Matriz)d;
            if( RBLinhasX.isSelected() ) {
                return temp.getVetorLinha( CB.getSelectedIndex() );
            } else {
                return temp.getVetorColuna( CB.getSelectedIndex() );
            }
        }
        return null;
    }

    private Dado geraDado() {
        Dado d1 = getDado(0);
        Dado d2 = getDado(1);

        if( d1 == null || d2 == null )
            return null;

        if( !CBAtivo.isSelected() ) { /* O dado a ser criado ou é um vetor ou é uma constante */
            return d1;  /* Retorna um vetor */
        } else {    /* pode ser constante, vetor ou matriz */
            if( d1.eMatriz() || d2.eMatriz() ) { /* é impossível d1 e d2 serem Matrizes */
                return null;
            }
            if( d1.eVetor() && d2.eVetor() ) { /* Retorna uma Matriz */
                Matriz M = Sistema.FSys.geraMatriz( (Vetor)d1, (Vetor)d2 );
                if( M == null ) {
                    Sistema.FSys.Msg("Erro","Não foi possível criar a Matriz!",0);
                }
                return M;
            }
            if( d1.eConstante() && d2.eConstante() ) { /* Retorna uma Matriz ( um só ponto ) */
                Constante c1 = (Constante)d1;
                Constante c2 = (Constante)d2;
                Matriz M = new Matriz(1,2);
                M.M[0][0] = c1.getValor();
                M.M[0][1] = c2.getValor();
                return M;
            }
            if( d1.eConstante() && d2.eVetor() ) {
                
            }
            if( d1.eVetor() && d2.eConstante() ) {
                
            }
        }
        return null;
    }
    
    private void CBPontosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CBPontosActionPerformed
        // TODO add your handling code here:
        if( CBPontos.isSelected() ) {
            //TB1.setEnabled(true);
            TB2.setEnabled(true);
            //TB3.setEnabled(true);
            TB4.setEnabled(true);
        } else {
            //TB1.setEnabled(false);
            TB2.setEnabled(false);
            //TB3.setEnabled(false);
            TB4.setEnabled(false);
        }
    }//GEN-LAST:event_CBPontosActionPerformed

    private void BSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BSairActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_BSairActionPerformed

    private void CBAtivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CBAtivoActionPerformed
        // TODO add your handling code here:
        if( CBAtivo.isSelected() ) {
            RBLinhasY.setEnabled(true);
            RBColunasY.setEnabled(true);
            CBNY.setEnabled(true);
            CBDadoY.setEnabled(true);
        } else {
            RBLinhasY.setEnabled(false);
            RBColunasY.setEnabled(false);
            CBNY.setEnabled(false);
            CBDadoY.setEnabled(false);
        }
    }//GEN-LAST:event_CBAtivoActionPerformed

    private void RBColunasXActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RBColunasXActionPerformed
        // TODO add your handling code here:
        this.atualizaNumerosX();
    }//GEN-LAST:event_RBColunasXActionPerformed
   
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BExcluir;
    private javax.swing.JButton BExibir;
    private javax.swing.JButton BPlot;
    private javax.swing.JButton BSair;
    private javax.swing.JCheckBox CBAtivo;
    private javax.swing.JComboBox CBDadoX;
    private javax.swing.JComboBox CBDadoY;
    private javax.swing.JComboBox CBGrafico;
    private javax.swing.JCheckBox CBLinhas;
    private javax.swing.JComboBox CBNX;
    private javax.swing.JComboBox CBNY;
    private javax.swing.JCheckBox CBPontos;
    private javax.swing.ButtonGroup GP;
    private javax.swing.ButtonGroup GX;
    private javax.swing.ButtonGroup GY;
    private javax.swing.JLabel LCorG;
    private javax.swing.JLabel LGrafico;
    private javax.swing.JLabel LN1;
    private javax.swing.JLabel LN2;
    private javax.swing.JLabel LnX;
    private javax.swing.JLabel LnY;
    private javax.swing.JPanel PCorGraf;
    private javax.swing.JPanel PGraf;
    private javax.swing.JPanel PListaGraficos;
    private javax.swing.JPanel POutros;
    private javax.swing.JPanel PX;
    private javax.swing.JPanel PY;
    private javax.swing.JRadioButton RBColunasX;
    private javax.swing.JRadioButton RBColunasY;
    private javax.swing.JRadioButton RBLinhasX;
    private javax.swing.JRadioButton RBLinhasY;
    private javax.swing.JScrollPane SPGraf;
    private javax.swing.JToggleButton TB2;
    private javax.swing.JToggleButton TB4;
    private javax.swing.JTextField TFGrafico;
    private javax.swing.JTextField TFNomeComponente;
    private javax.swing.JTable TGraf;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    // End of variables declaration//GEN-END:variables

    private ModeloTabelaLista modelo;
}
