/*
 * DOper.java
 *
 * Created on 4 de Março de 2005, 18:41
 */

package Janelas;

/**
 *
 * @author  Gustavo
 */
import Dados.*;
import Ferramentas.*;
import Sistema.FSys;

public class DOper extends javax.swing.JDialog {
    
    /** Creates new form DOper */
    public DOper(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        modeloE = new Componentes.ModeloTabela();
        modeloE.desableEdit();
        modeloD = new Componentes.ModeloTabela();
        modeloD.desableEdit();
        TabelaDadosE.setModel( modeloE );
        TabelaDadosD.setModel( modeloD );
        initTabs();
        setSize( 470, 380 );
    }

    private void initTabs() {
        removeElementosTabelas();
        int tam = LAMV.LAMV.LDados.getnNos();
        if( tam == 0 ) {
            return;
        }
        Dado d;
        for( int c = 0; c < tam; c++ ) {
            d = LAMV.LAMV.LDados.getD( c );
            if( d == null )
                return;
            modeloE.addDado( d );
            modeloD.addDado( d );
        }
    }
    
    private void removeElementosTabelas(){
        int tam = modeloE.getRowCount();
        if( tam == 0 ) {
            return;
        }
        for( int c = 0; c < tam; c++ ) {
            modeloE.removeRow(0);
            modeloD.removeRow(0);
        }
    }
    
    public void refresh(){
        initTabs();
    }
    
    private void initEventos() {
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        PanelDado1 = new javax.swing.JPanel();
        ScrollTabE = new javax.swing.JScrollPane();
        TabelaDadosE = new javax.swing.JTable();
        ScrollTabD = new javax.swing.JScrollPane();
        TabelaDadosD = new javax.swing.JTable();
        LDado1 = new javax.swing.JLabel();
        LDado2 = new javax.swing.JLabel();
        POper = new javax.swing.JPanel();
        CBOper = new javax.swing.JComboBox();
        TFNome = new javax.swing.JTextField();
        LNome = new javax.swing.JLabel();
        BOK = new javax.swing.JButton();
        BSair = new javax.swing.JButton();

        getContentPane().setLayout(null);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        PanelDado1.setLayout(null);

        PanelDado1.setBorder(javax.swing.BorderFactory.createTitledBorder("Dados"));
        ScrollTabE.setPreferredSize(new java.awt.Dimension(215, 200));
        TabelaDadosE.setShowHorizontalLines(false);
        ScrollTabE.setViewportView(TabelaDadosE);

        PanelDado1.add(ScrollTabE);
        ScrollTabE.setBounds(10, 40, 200, 200);

        ScrollTabD.setPreferredSize(new java.awt.Dimension(215, 200));
        TabelaDadosD.setShowHorizontalLines(false);
        ScrollTabD.setViewportView(TabelaDadosD);

        PanelDado1.add(ScrollTabD);
        ScrollTabD.setBounds(230, 40, 200, 200);

        LDado1.setText("1\u00ba Dado");
        PanelDado1.add(LDado1);
        LDado1.setBounds(80, 20, 60, 14);

        LDado2.setText("2\u00ba Dado");
        PanelDado1.add(LDado2);
        LDado2.setBounds(310, 20, 60, 14);

        getContentPane().add(PanelDado1);
        PanelDado1.setBounds(10, 10, 440, 260);

        POper.setLayout(null);

        POper.setBorder(javax.swing.BorderFactory.createTitledBorder("Opera\u00e7\u00e3o"));
        CBOper.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Soma", "Subtra\u00e7\u00e3o", "Multiplica\u00e7\u00e3o", "Divis\u00e3o", "Inversa", "Determinante", "Concatena\u00e7\u00e3o a direita", "Concatena\u00e7\u00e3o abaixo" }));
        CBOper.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CBOperActionPerformed(evt);
            }
        });

        POper.add(CBOper);
        CBOper.setBounds(10, 30, 150, 22);

        POper.add(TFNome);
        TFNome.setBounds(180, 30, 120, 19);

        LNome.setText("Nome do resultado:");
        POper.add(LNome);
        LNome.setBounds(180, 10, 110, 14);

        BOK.setText("Ok");
        BOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BOKActionPerformed(evt);
            }
        });

        POper.add(BOK);
        BOK.setBounds(310, 30, 50, 23);

        getContentPane().add(POper);
        POper.setBounds(10, 270, 380, 70);

        BSair.setText("Sair");
        BSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BSairActionPerformed(evt);
            }
        });

        getContentPane().add(BSair);
        BSair.setBounds(391, 280, 60, 50);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void CBOperActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CBOperActionPerformed
// TODO add your handling code here:
        switch(CBOper.getSelectedIndex()) {
            case 0:
            case 1:
            case 2:
            case 6:
            case 7:
                TabelaDadosE.setEnabled(true);
                TabelaDadosD.setEnabled(true);
                TabelaDadosD.setVisible(true);
                break;
            case 3:
            case 4:
            case 5:
                TabelaDadosE.setEnabled(true);
                TabelaDadosD.setEnabled(false);
                TabelaDadosD.setVisible(false);
            default:
                break;
        }
    }//GEN-LAST:event_CBOperActionPerformed

    private void BOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BOKActionPerformed
        // TODO add your handling code here:
        if( TabelaDadosE.getRowCount() == 0 )
            return;
        int nE = TabelaDadosE.getSelectedRow();
        int nD = TabelaDadosD.getSelectedRow();
        if(nE >= 0 ) d1 = LAMV.LAMV.LDados.Procura( (String)TabelaDadosE.getValueAt(nE,0) );
        if(nD >= 0 ) d2 = LAMV.LAMV.LDados.Procura( (String)TabelaDadosD.getValueAt(nD,0) );
        
        String nome = TFNome.getText();
        if( !Sistema.FSys.verificaNome( nome ) )
            nome = null;
        int op = CBOper.getSelectedIndex();
        Algebra alg = new Algebra();
        switch( op ) {
            case 0: /* Soma */
                if( d1 == null || d2 == null ) {
                    Sistema.FSys.Msg("Erro", "Selecione um dado em cada tabela!", 0);
                    return;
                }
                result = alg.Soma( d1, d2 );
                break;
            case 1: /* Subtração */
                if( d1 == null || d2 == null ) {
                    Sistema.FSys.Msg("Erro", "Selecione um dado em cada tabela!", 0);
                    return;
                }
                result = alg.Sub( d1, d2 );
                break;
            case 2: /* Multiplicação */
                if( d1 == null || d2 == null ) {
                    Sistema.FSys.Msg("Erro", "Selecione um dado em cada tabela!", 0);
                    return;
                }
                result = alg.Mult( d1, d2 );
                break;
            case 3: /* Divisão */
                result = alg.Divide( d1, d2 );
                break;
            case 4: /* Inversa */
                if( d1 == null ) {
                    Sistema.FSys.Msg("Erro", "Selecione um dado da tabela da esquerda!", 0);
                    return;
                }
                if( d1.eMatriz() ) {
                    Matriz z = (Matriz)d1;
                    double res[][] = alg.Inverse( z.getMatriz() );
                    Matriz inv = new Matriz( res.length, res.length);
                    inv.setMatriz( res );
                    result = inv;
                }
                break;
            case 5: /* Determinante */
                if( d1 == null ) {
                    Sistema.FSys.Msg("Erro", "Selecione um dado da tabela da esquerda!", 0);
                    return;
                }
                if( d1.eMatriz() ) {
                    if( d1.getDimL() != d1.getDimC()) {
                        Sistema.FSys.Msg("Erro", "A Matriz deve ser quadrada!", 0);
                        return;
                    }
                    Matriz z = (Matriz)d1;
                    Constante c = new Constante( alg.Determinant( z.getMatriz() ), "Det_"+d1.getName() );
                    result = c;
                }
                break;
            case 6: /* Concatenação a direita */
                if( d1 == null || d2 == null ) {
                    Sistema.FSys.Msg("Erro", "Selecione um dado em cada tabela!", 0);
                    return;
                }
                if( d1.eMatriz() && d2.eMatriz() ) {
                    try
                    {
                        result = alg.ConcatDireita(Sistema.FSys.Dado_to_Mat(d1),Sistema.FSys.Dado_to_Mat(d2));
                    }
                    catch(Exception e)
                    {
                        Sistema.FSys.Msg("Erro", e.getMessage(), 0);
                    }
                }
                break;
            case 7: /* Concatenação abaixo */
                if( d1 == null || d2 == null ) {
                    Sistema.FSys.Msg("Erro", "Selecione um dado em cada tabela!", 0);
                    return;
                }
                if( d1.eMatriz() && d2.eMatriz() ){
                    try
                    {
                        result = alg.ConcatAbaixo(Sistema.FSys.Dado_to_Mat(d1),Sistema.FSys.Dado_to_Mat(d2));
                    }
                    catch(Exception e)
                    {
                        Sistema.FSys.Msg("Erro", e.getMessage(), 0);
                        System.out.println(e.getClass());
                    }
                }
                break;
            default:
                break;
        }
        if( result == null )
            return;
        if( nome != null )
            result.setName( nome );
        Sistema.FSys.insereDadoSistema( result );
        refresh();
    }//GEN-LAST:event_BOKActionPerformed

    private void BSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BSairActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_BSairActionPerformed
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BOK;
    private javax.swing.JButton BSair;
    private javax.swing.JComboBox CBOper;
    private javax.swing.JLabel LDado1;
    private javax.swing.JLabel LDado2;
    private javax.swing.JLabel LNome;
    private javax.swing.JPanel POper;
    private javax.swing.JPanel PanelDado1;
    private javax.swing.JScrollPane ScrollTabD;
    private javax.swing.JScrollPane ScrollTabE;
    private javax.swing.JTextField TFNome;
    private javax.swing.JTable TabelaDadosD;
    private javax.swing.JTable TabelaDadosE;
    // End of variables declaration//GEN-END:variables
    private Componentes.ModeloTabela modeloE;
    private Componentes.ModeloTabela modeloD;
    private Dado d1;
    private Dado d2;
    private Dado result;
}
