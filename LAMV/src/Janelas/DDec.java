/*
 * DDec.java
 *
 * Created on 23 de Março de 2005, 17:19
 */

package Janelas;

/**
 *
 * @author  Gustavo
 */

import Dados.*;
import Ferramentas.Algebra;
import Sistema.FSys;
import java.util.Vector;


public class DDec extends javax.swing.JDialog {
    
    /** Creates new form DDec */
    public DDec(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        inicializaDados();
        atualizaCampos();
        this.setResizable(false);
        this.setSize(375, 415);
    }

    public void inicializaDados() {
        int tam = LAMV.LAMV.LDados.getnNos();
        CBDado.removeAllItems();
        if( tam == 0 ) {
            return;
        }        
        this.dado = LAMV.LAMV.LDados.getD(0);
        Dado _d;
        for( int c = 0; c < tam; c++ ) {
            _d = LAMV.LAMV.LDados.getD(c);
            CBDado.addItem( _d.getName() );
        }
    }
    
    private void atualizaCampos() {
        CBCo.removeAllItems();
        CBLo.removeAllItems();
        
        if( dado == null ) return;
        
        int l = 0;
        
        l = dado.getDimC();
        for( int x = 0; x < l; x++ ) {
            CBCo.addItem(""+x);
            //CBCf.addItem(""+x);
        }
        
        l = dado.getDimL();
        for( int x = 0; x < l; x++ ) {
            CBLo.addItem(""+x);
            //CBLf.addItem(""+x);
        }
       
         CBCoActionPerformed( null );
         CBLoActionPerformed( null );
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        Grupo = new javax.swing.ButtonGroup();
        PRecort = new javax.swing.JPanel();
        CBCo = new javax.swing.JComboBox();
        CBLo = new javax.swing.JComboBox();
        CBLf = new javax.swing.JComboBox();
        CBCf = new javax.swing.JComboBox();
        LXo = new javax.swing.JLabel();
        LXf = new javax.swing.JLabel();
        LYo = new javax.swing.JLabel();
        LYf = new javax.swing.JLabel();
        TFNome = new javax.swing.JTextField();
        BRecort = new javax.swing.JButton();
        LNome = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        PDec = new javax.swing.JPanel();
        RBSVD = new javax.swing.JRadioButton();
        RBQR = new javax.swing.JRadioButton();
        RBEIG = new javax.swing.JRadioButton();
        TFM1 = new javax.swing.JTextField();
        TFM2 = new javax.swing.JTextField();
        TFM3 = new javax.swing.JTextField();
        LM1 = new javax.swing.JLabel();
        LM2 = new javax.swing.JLabel();
        LM3 = new javax.swing.JLabel();
        BDec = new javax.swing.JButton();
        BSair = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        CBDado = new javax.swing.JComboBox();
        JLDimensao = new javax.swing.JLabel();

        getContentPane().setLayout(null);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        PRecort.setLayout(null);

        PRecort.setBorder(javax.swing.BorderFactory.createTitledBorder("Recortar"));
        CBCo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CBCoActionPerformed(evt);
            }
        });

        PRecort.add(CBCo);
        CBCo.setBounds(140, 40, 50, 22);

        CBLo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CBLoActionPerformed(evt);
            }
        });

        PRecort.add(CBLo);
        CBLo.setBounds(80, 40, 50, 22);

        PRecort.add(CBLf);
        CBLf.setBounds(80, 80, 50, 22);

        PRecort.add(CBCf);
        CBCf.setBounds(140, 80, 50, 22);

        LXo.setText("Linha");
        PRecort.add(LXo);
        LXo.setBounds(80, 24, 50, 20);

        LXf.setText("Linha");
        PRecort.add(LXf);
        LXf.setBounds(80, 64, 50, 20);

        LYo.setText("Coluna");
        PRecort.add(LYo);
        LYo.setBounds(140, 24, 50, 20);

        LYf.setText("Coluna");
        PRecort.add(LYf);
        LYf.setBounds(140, 64, 50, 20);

        TFNome.setText("Nome");
        PRecort.add(TFNome);
        TFNome.setBounds(200, 40, 130, 19);

        BRecort.setText("Recortar");
        BRecort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BRecortActionPerformed(evt);
            }
        });

        PRecort.add(BRecort);
        BRecort.setBounds(200, 80, 90, 23);

        LNome.setText("Nome do recorte:");
        PRecort.add(LNome);
        LNome.setBounds(200, 20, 100, 14);

        jLabel1.setText("Ponto inicial:");
        PRecort.add(jLabel1);
        jLabel1.setBounds(10, 40, 70, 20);

        jLabel2.setText("Ponto final:");
        PRecort.add(jLabel2);
        jLabel2.setBounds(10, 80, 70, 20);

        getContentPane().add(PRecort);
        PRecort.setBounds(10, 70, 350, 120);

        PDec.setLayout(null);

        PDec.setBorder(javax.swing.BorderFactory.createTitledBorder("Decomposi\u00e7\u00e3o"));
        Grupo.add(RBSVD);
        RBSVD.setText("SVD ( Decomposi\u00e7\u00e3o em Valores Singulares )");
        RBSVD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RBSVDActionPerformed(evt);
            }
        });

        PDec.add(RBSVD);
        RBSVD.setBounds(10, 20, 270, 20);

        Grupo.add(RBQR);
        RBQR.setText("QR ( Decomposi\u00e7\u00e3o Ortogonal-Triangular superior )");
        RBQR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RBQRActionPerformed(evt);
            }
        });

        PDec.add(RBQR);
        RBQR.setBounds(10, 40, 290, 23);

        Grupo.add(RBEIG);
        RBEIG.setText("EIG ( Auto valores e Auto Vetores  )");
        RBEIG.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RBEIGActionPerformed(evt);
            }
        });

        PDec.add(RBEIG);
        RBEIG.setBounds(10, 60, 220, 23);

        TFM1.setText("M1");
        PDec.add(TFM1);
        TFM1.setBounds(10, 110, 120, 19);

        TFM2.setText("M2");
        PDec.add(TFM2);
        TFM2.setBounds(10, 140, 120, 19);

        TFM3.setText("M3");
        PDec.add(TFM3);
        TFM3.setBounds(10, 170, 120, 19);

        LM1.setText("Nome M1");
        PDec.add(LM1);
        LM1.setBounds(140, 110, 80, 14);

        LM2.setText("Nome M2");
        PDec.add(LM2);
        LM2.setBounds(140, 140, 80, 14);

        LM3.setText("Nome M3");
        PDec.add(LM3);
        LM3.setBounds(140, 170, 80, 14);

        BDec.setText("Decompor");
        BDec.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BDecActionPerformed(evt);
            }
        });

        PDec.add(BDec);
        BDec.setBounds(220, 130, 100, 23);

        BSair.setText("Sair");
        BSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BSairActionPerformed(evt);
            }
        });

        PDec.add(BSair);
        BSair.setBounds(220, 160, 100, 23);

        getContentPane().add(PDec);
        PDec.setBounds(10, 190, 350, 200);

        jPanel1.setLayout(null);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Selecione uma Matriz ou um Vetor"));
        CBDado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CBDadoActionPerformed(evt);
            }
        });

        jPanel1.add(CBDado);
        CBDado.setBounds(10, 30, 180, 22);

        JLDimensao.setText("Dimens\u00e3o: ");
        jPanel1.add(JLDimensao);
        JLDimensao.setBounds(200, 30, 140, 20);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(10, 8, 350, 60);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
// TODO add your handling code here:
        inicializaDados();
        atualizaCampos();
    }//GEN-LAST:event_formWindowActivated

    private void RBEIGActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RBEIGActionPerformed
        // TODO add your handling code here:
        TFM3.setEditable(false);
        TFM1.setText("AutVal_"+CBDado.getSelectedItem().toString());
        TFM2.setText("AutVet_"+CBDado.getSelectedItem().toString());
    }//GEN-LAST:event_RBEIGActionPerformed

    private void RBQRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RBQRActionPerformed
        // TODO add your handling code here:
        TFM3.setEditable(false);
        TFM1.setText("Q_"+CBDado.getSelectedItem().toString());
        TFM2.setText("R_"+CBDado.getSelectedItem().toString());
    }//GEN-LAST:event_RBQRActionPerformed

    private void BSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BSairActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_BSairActionPerformed

    private void RBSVDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RBSVDActionPerformed
        // TODO add your handling code here:
        if(RBSVD.isSelected())
        {
            TFM3.setEditable(true);
        }
        else
        {
            TFM3.setEditable(false);
        }
        TFM1.setText("S_"+CBDado.getSelectedItem().toString());
        TFM2.setText("V_"+CBDado.getSelectedItem().toString());
        TFM3.setText("D_"+CBDado.getSelectedItem().toString());
    }//GEN-LAST:event_RBSVDActionPerformed

    private void BDecActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BDecActionPerformed
        // TODO add your handling code here:
        if( CBDado.getItemCount() <= 0 )
            return;
        Dado d = LAMV.LAMV.LDados.Procura(CBDado.getSelectedItem().toString());
        if(d == null) {
            Sistema.FSys.Msg("ERRO","Não foi possível obter "+CBDado.getSelectedItem().toString(),0);
            return;
        } else {
            Matriz X = Sistema.FSys.Dado_to_Mat(d);
            if(RBSVD.isSelected()) {
                Ferramentas.svd SVD = new Ferramentas.svd(X);
                Matriz S = SVD.getS();
                String nome = TFM1.getText();
                if(!nome.trim().equals("") )
                    S.setName(nome);
                else
                    S.setName("S_"+X.getName());
                nome = TFM2.getText();
                Matriz V = SVD.getV();
                if(!nome.trim().equals(""))
                    V.setName(nome);
                else
                    V.setName("V_"+X.getName());
                Matriz D = SVD.getD();
                nome = TFM3.getText();
                if(!nome.trim().equals(""))
                    D.setName(nome);
                else
                    D.setName("D_"+X.getName());
                Sistema.FSys.insereDadoSistema(S);
                Sistema.FSys.insereDadoSistema(V);
                Sistema.FSys.insereDadoSistema(D);
            } else if(RBEIG.isSelected()) {
                
                Ferramentas.Algebra Fer = new Ferramentas.Algebra();
                java.util.Vector Ret = Fer.Eig(X);
                Matriz A1;
                for( int i = 0; i < Ret.size() ; i ++) {
                    A1 = (Matriz)Ret.elementAt(i);
                    Sistema.FSys.insereDadoSistema(A1);
                }
            }
            else if(RBQR.isSelected())
            {
                X.data = X.M;
                Ferramentas.QR_pivoteamento Fer2 = new Ferramentas.QR_pivoteamento(X,false);
                Vector Ret = Fer2.getQR();
                Matriz A1;
                for( int i = 0; i < Ret.size() ; i ++) {
                    A1 = (Matriz)Ret.elementAt(i);
                    A1.M = A1.data;
                    Sistema.FSys.insereDadoSistema(A1);
                }
            }
            
        }
    }//GEN-LAST:event_BDecActionPerformed

    private void CBCoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CBCoActionPerformed
        // TODO add your handling code here:
        if( dado == null )
            return;
        CBCf.removeAllItems();
        int l = CBCo.getSelectedIndex();
        for( int c = l; c < dado.getDimC(); c++ ) {
            CBCf.addItem(""+c);
        }
        
    }//GEN-LAST:event_CBCoActionPerformed

    private void CBLoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CBLoActionPerformed
        // TODO add your handling code here:
        if( dado == null )
            return;
        CBLf.removeAllItems();
        int l = CBLo.getSelectedIndex();
        for( int c = l; c < dado.getDimL(); c++ ) {
            CBLf.addItem(""+c);
        }
    }//GEN-LAST:event_CBLoActionPerformed

    private void BRecortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BRecortActionPerformed
        // TODO add your handling code here:
        String n = (String)CBDado.getSelectedItem();
        if( n == null )/* Não existe nada selecionado */
            return;
        Dado d = LAMV.LAMV.LDados.Procura(n);
        if( d == null )/* Não existe um Dado com esse nome */
            return;
        if( d.eMatriz() ) {
            int lo = CBLo.getSelectedIndex();
            int lf = CBLf.getSelectedIndex();
            int co = CBCo.getSelectedIndex();
            int cf = CBCf.getSelectedIndex();
            Matriz M = (Matriz)d;
            Algebra alg = new Algebra();
            Matriz R = alg.RecortM( M, lo, co, lf+lo, cf+co);
            String nome = TFNome.getText();
            if( !Sistema.FSys.verificaNome( nome ) ) {
                nome = Sistema.FSys.novoNome( LAMV.LAMV.LDados, nome );
            }
            if( R.getnColunas() == 1 && R.getnLinhas() > 1 ) { /* É um vetor */
                Vetor v = R.getVetorColuna(0);
                v.setName(nome);
                Sistema.FSys.insereDadoSistema(v);
                return;
            }
            if( R.getnLinhas() == 1 && R.getnColunas() > 1 ) { /* É um vetor transposto */
                Vetor v = R.getVetorLinha(0);
                v.setName(nome);
                Sistema.FSys.insereDadoSistema(v);
                return;
            }
            if( R.getnColunas() == 1 && R.getnLinhas() == 1 ) { /* É uma contante */
                Constante c = new Constante( R.M[0][0] );
                c.setName( nome );
                Sistema.FSys.insereDadoSistema(c);
                return;
            }
            /* É uma matriz */
            R.setName( nome );
            Sistema.FSys.insereDadoSistema(R);
        } else {
            if( d.eVetor() ) {
                int lo = CBLo.getSelectedIndex();
                int lf = CBLf.getSelectedIndex();
                Vetor v = (Vetor)d;
                Algebra alg = new Algebra();
                Vetor r = alg.RecortaV( v, lo, lf+lo );
                String nome = TFNome.getText();
                if( !Sistema.FSys.verificaNome( nome ) ) {
                    nome = Sistema.FSys.novoNome( LAMV.LAMV.LDados, nome );
                }
                r.setName( nome );
                Sistema.FSys.insereDadoSistema(r);
            } else {
                /* O dado é uma constante */
            }
        }
    }//GEN-LAST:event_BRecortActionPerformed

    private void CBDadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CBDadoActionPerformed
        // TODO add your handling code here:
        if( CBDado.getItemCount() <= 0 ) {
            return;
        }        
        String asd = CBDado.getSelectedItem().toString();
        
        this.dado = LAMV.LAMV.LDados.Procura(asd);
        JLDimensao.setText("Dimensão: [ "+dado.getDimL()+" , "+dado.getDimC()+" ]");
        atualizaCampos();
    }//GEN-LAST:event_CBDadoActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BDec;
    private javax.swing.JButton BRecort;
    private javax.swing.JButton BSair;
    private javax.swing.JComboBox CBCf;
    private javax.swing.JComboBox CBCo;
    private javax.swing.JComboBox CBDado;
    private javax.swing.JComboBox CBLf;
    private javax.swing.JComboBox CBLo;
    private javax.swing.ButtonGroup Grupo;
    private javax.swing.JLabel JLDimensao;
    private javax.swing.JLabel LM1;
    private javax.swing.JLabel LM2;
    private javax.swing.JLabel LM3;
    private javax.swing.JLabel LNome;
    private javax.swing.JLabel LXf;
    private javax.swing.JLabel LXo;
    private javax.swing.JLabel LYf;
    private javax.swing.JLabel LYo;
    private javax.swing.JPanel PDec;
    private javax.swing.JPanel PRecort;
    private javax.swing.JRadioButton RBEIG;
    private javax.swing.JRadioButton RBQR;
    private javax.swing.JRadioButton RBSVD;
    private javax.swing.JTextField TFM1;
    private javax.swing.JTextField TFM2;
    private javax.swing.JTextField TFM3;
    private javax.swing.JTextField TFNome;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
    private Dado dado;
}
